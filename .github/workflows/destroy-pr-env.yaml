name: Destroy PR Environment
on:
  issue_comment:
    types: [created]
  pull_request_target:
    types: [closed]

jobs:
  destroy-pr-env:
    if: (github.event.issue.pull_request && github.event.issue.state == 'open' && github.event.comment.body == '/destroy') || github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      pull-requests: write

    steps:
      - name: Get ENV Name
        id: get-env-name
        run: echo "env_name=gh-play10-pr-${{ github.event.issue.number || github.event.pull_request.number }}" >> $GITHUB_OUTPUT
      - name: Check if Environment Exists
        id: check-env
        run: |
          echo "Checking if environment ${{ steps.get-env-name.outputs.env_name }} exists..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SERVER }} "if [ -d deployments/gh-play10/${{ steps.get-env-name.outputs.env_name }} ]; then echo 'exists=true'; else echo 'exists=false'; fi" > env_check.txt
          should_terminate=$(cat env_check.txt | grep 'exists=true' && echo 'true' || echo 'false')
          echo "should_terminate=$should_terminate" >> $GITHUB_OUTPUT
      - name: Destroy Environment
        if: steps.check-env.outputs.should_terminate == 'true'
        run: |
          echo "Destroying environment ${{ steps.get-env-name.outputs.env_name }}..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SERVER }} "cd deployments/gh-play10/${{ steps.get-env-name.outputs.env_name }} && docker compose down && rm -rf deployments/gh-play10/${{ steps.get-env-name.outputs.env_name }}"

      - name: Get Pull Request Head Ref
        if: github.event_name == 'issue_comment' && steps.check-env.outputs.should_terminate == 'true'
        id: get-head-ref
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const response = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
            });
            return response.data.head.ref

      - name: Get deployment ID
        if: steps.check-env.outputs.should_terminate == 'true'
        uses: actions/github-script@v7
        id: get-latest-deployment
        env:
          REF: ${{ github.event.pull_request.head.ref || steps.get-head-ref.outputs.result }}
        with:
          result-encoding: string
          script: |
            const response = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: process.env.REF,
              per_page: 1
            });
            return response.data.length > 0 ? response.data[0].id : ""

      - name: Add Inactive Status
        if: steps.get-latest-deployment.outputs.result != '' && steps.check-env.outputs.should_terminate == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.get-latest-deployment.outputs.result }},
              state: 'inactive',
            });
            console.log(response)

      - name: Update Pull Request (Failure)
        uses: actions/github-script@v7
        if: failure() && steps.check-env.outputs.should_terminate == 'true'
        continue-on-error: true
        with:
          script: |
            const comment = `### ðŸ›‘ Environment Termination Failed.

            [View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number || github.event.pull_request.number }},
              body: comment
            })

      - name: Update Pull Request (Success)
        uses: actions/github-script@v7
        if: success() && steps.check-env.outputs.should_terminate == 'true'
        continue-on-error: true
        with:
          script: |
            const comment = `### âœ… Environment Terminated Successfully.`

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number || github.event.pull_request.number }},
              body: comment
            })
